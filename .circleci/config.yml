JOB_DEFAULTS: &JOB_DEFAULTS
  docker:
    - image: node:9

version: 2
jobs:
  repo:
    <<: *JOB_DEFAULTS
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .

  dependencies:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Installing npm dependencies
          command: npm install --no-progress --quiet
      - save_cache:
          key: v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
          paths:
            - node_modules

  lint:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Running lint checking
          command: npm run lint -- --quiet --format junit --output-file eslint-results.xml
      - store_artifacts:
          path: eslint-results.xml
          prefix: linting

  flow:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Running flow static type checking
          command: npm run flow

  coverage:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Running tests and collecting code coverage results
          # command: ./node_modules/.bin/nyc --reporter lcov --reporter text npm run test:unit -- --reporter mocha-junit-reporter
          command: npm run test:unit
          environment:
            # NODE_ENV: test
            MOCHA_FILE: unit-test-results.xml
      - store_artifacts:
         path: unit-test-results.xml
         prefix: unit-tests
      # - store_artifacts:
      #     path: coverage
      #     prefix: coverage

  build:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Building and packaging the application
          command: npm run package
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .tmp
            - dist

  acceptance:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - restore_cache:
          keys:
            - v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Running local acceptance tests
          command: npm run test:acceptance -- --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: local-acceptance-test-results.xml
      - store_artifacts:
          path: local-acceptance-test-results.xml
          prefix: acceptance-tests

  deploy:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - restore_cache:
          keys:
            - v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Deploying to Azure App Service
          command: npm run deploy

  healthcheck:
    <<: *JOB_DEFAULTS
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: Waiting for the server to be healthy
          command: |
            for i in `seq 1 12`; do
              curl --output /dev/null --silent --head --fail $PUBLIC_URL/api/healthcheck && echo "Server is up and healthy" && break
              echo "Waiting for server to come up..."
              sleep 5
            done
      - run:
          name: Running Acceptance Tests (post-deploy)
          command: |
            ACCEPTANCE_TEST_HOST=$PUBLIC_URL
            export ACCEPTANCE_TEST_HOST
            npm run test:acceptance -- --reporter mocha-junit-reporter
            unset -v ACCEPTANCE_TEST_HOST
          environment:
            MOCHA_FILE: acceptance-test-results.xml
      - store_artifacts:
          path: acceptance-test-results.xml
          prefix: acceptance-tests

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - repo
      - dependencies:
          requires:
            - repo
      - lint:
          requires:
            - dependencies
      - flow:
          requires:
            - dependencies
      - coverage:
          requires:
            - dependencies
      - build:
          requires:
            - dependencies
      - acceptance:
          requires:
            - build
      - deploy:
          requires:
            - lint
            - flow
            - coverage
            - acceptance
          filters:
            branches:
              only: master
      - healthcheck:
          requires:
            - deploy
          filters:
            branches:
              only: master
